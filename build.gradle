buildscript {
    apply from: 'gradle/dependencies.gradle'

    repositories {
        google()
        gradlePluginPortal()
    }

    dependencies {
        classpath 'com.gradle:build-scan-plugin:1.16'
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath 'com.novoda:gradle-android-command-plugin:2.0.1'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.4'
        classpath 'com.vanniktech:gradle-android-apk-size-plugin:0.4.0'
        classpath 'com.github.triplet.gradle:play-publisher:1.2.2'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
        classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.6'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
    }
}

repositories {
    google()
    gradlePluginPortal()
}

apply from: 'gradle/scan.gradle'
apply plugin: 'com.android.application'
apply plugin: 'android-command'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.vanniktech.android.apk.size'
apply plugin: 'net.ltgt.errorprone'
apply plugin: 'com.github.ben-manes.versions'
apply from: 'gradle/compile.gradle'
apply from: 'gradle/quality.gradle'
apply from: 'gradle/publish.gradle'

android {
    compileSdkVersion buildConfig.compileSdk

    defaultConfig {
        applicationId 'burrows.apps.example.template'
        versionCode 1
        versionName '1.0'
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        resConfigs 'en'
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        debug {
            storeFile file('config/debug.keystore')
            storePassword buildConfig.signing.password
            keyAlias buildConfig.signing.alias
            keyPassword buildConfig.signing.password
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFile 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility versions.java
        targetCompatibility versions.java
    }

    dexOptions.preDexLibraries !ci

    lintOptions {
        textReport true
        textOutput 'stdout'
        checkAllWarnings true
        warningsAsErrors true
        lintConfig = file('config/lint.xml')
        checkReleaseBuilds = false
        checkTestSources = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    implementation deps.material
    implementation deps.androidx.cardview
    implementation deps.gps.ads
    implementation deps.gps.basement
    implementation deps.gps.base

    androidTestImplementation deps.androidx.test.runner
    androidTestImplementation deps.androidx.test.rules
    androidTestImplementation deps.androidx.test.espresso.core
    androidTestImplementation deps.androidx.test.espresso.intents
    androidTestImplementation deps.androidx.test.espresso.contrib
    androidTestImplementation deps.androidx.test.ext.junit

    testImplementation deps.androidx.test.runner
    testImplementation deps.androidx.test.rules
    testImplementation deps.androidx.test.espresso.core
    testImplementation deps.androidx.test.ext.junit
    testImplementation deps.junit
    testImplementation deps.mockito.inline
    testImplementation deps.easymock
    testImplementation deps.powermock.core
    testImplementation deps.powermock.junit4
    testImplementation deps.powermock.easymock
    testImplementation deps.robolectric
    testImplementation deps.assertj

    errorprone deps.errorprone.core
    errorproneJavac deps.errorprone.javac
}
